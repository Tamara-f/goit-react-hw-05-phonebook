{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Notify/notify.module.css","components/ContactEditor/logo.module.css","components/Filter/filter.module.css","components/Section.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/ContactEditor/ContactEditor.js","components/Filter/Filter.js","components/Notify/Notification.js","components/App.js","index.js"],"names":["module","exports","Section","children","ContactListItem","name","number","onRemove","className","s","listItem","type","onClick","ContactList","contacts","onRemovecontact","check","length","undefined","TransitionGroup","in","toString","component","map","id","CSSTransition","key","classNames","sTransition","timeout","INIT","ContactEditor","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","this","appear","unmountOnExit","onSubmit","htmlFor","onChange","Component","Filter","onChangeFilter","PropTypes","string","Notification","timer","clearTimeout","setTimeout","onNotify","bind","notify","App","filter","unic","addContact","contact","uuidv4","find","prevState","removeContact","contactId","changeFilter","getFilterName","toLowerCase","includes","removeNotification","savedContacts","localStorage","getItem","JSON","parse","setItem","stringify","filterContacts","sNotify","sFilter","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.1fe31ee1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__3T9j3\",\"enterActive\":\"ContactList_enterActive__A25SR\",\"exit\":\"ContactList_exit__2WWVR\",\"exitActive\":\"ContactList_exitActive__2qMPm\",\"listItem\":\"ContactList_listItem__5XQ-u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"notify_enter__qo_6d\",\"enterActive\":\"notify_enterActive__vqMnA\",\"exit\":\"notify_exit__2G9XO\",\"exitActive\":\"notify_exitActive__1OLWx\",\"notify\":\"notify_notify__11FBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"logo_appear__1j9VE\",\"appearActive\":\"logo_appearActive__1eA6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"filter_enter__1xZSc\",\"enterActive\":\"filter_enterActive__3rj5l\",\"exit\":\"filter_exit__2lVF1\",\"exitActive\":\"filter_exitActive__26FfH\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ children }) {\r\n  return <section>{children}</section>;\r\n}\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => (\r\n  <li className={s.listItem}>\r\n    <span>\r\n      {name}: {number}\r\n    </span>\r\n    <button type=\"button\" className=\"deleteBtn\" onClick={onRemove}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nimport ContactListItem from './ContactListItem';\r\n\r\nimport sTransition from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemovecontact }) => {\r\n  const check = contacts.length > 0 ? true : undefined;\r\n  return (\r\n    <TransitionGroup in={{ check }.toString()} component=\"ul\" className=\"List\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition\r\n          in={true}\r\n          key={id}\r\n          classNames={sTransition}\r\n          timeout={250}\r\n        >\r\n          <ContactListItem\r\n            name={name}\r\n            number={number}\r\n            onRemove={() => onRemovecontact(id)}\r\n          />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onRemovecontact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport ContactList from '../ContactList/ContactList';\r\n\r\nimport sTransition from './logo.module.css';\r\n\r\nconst INIT = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nexport default class ContactEditor extends Component {\r\n  state = INIT;\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state);\r\n    this.setState(INIT);\r\n  };\r\n  componentDidMount() {}\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          timeout={500}\r\n          classNames={sTransition}\r\n          unmountOnExit\r\n        >\r\n          <h1>Phonebook</h1>\r\n        </CSSTransition>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"name\">\r\n            Name\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"number\">\r\n            Number\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\nContactList.PropTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div className=\"find\">\r\n      <span>Find name</span>\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={({ target }) => onChangeFilter(target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport s from './notify.module.css';\r\n\r\nclass Notification extends Component {\r\n  state = {\r\n    timer: null,\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    clearTimeout(this.timer);\r\n  }\r\n\r\n  render() {\r\n    this.timer = setTimeout(this.props.onNotify.bind(this), 3000);\r\n\r\n    return (\r\n      <div className={s.notify} onClick={() => this.props.onNotify()}>\r\n        This contact is already in list!!!\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Section from './Section';\r\nimport ContactList from './ContactList/ContactList';\r\nimport ContactEditor from './ContactEditor/ContactEditor';\r\nimport Filter from './Filter/Filter';\r\nimport Notification from './Notify/Notification';\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport sNotify from './Notify/notify.module.css';\r\nimport sFilter from './Filter/filter.module.css';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    unic: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const savedContacts = localStorage.getItem('contacts');\r\n    if (savedContacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(savedContacts),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addContact = ({ name, number }) => {\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n\r\n    const UnicName = this.state.contacts.find(contact => contact.name === name);\r\n    if (UnicName) {\r\n      this.setState({ unic: 'true' });\r\n    } else {\r\n      this.setState(prevState => {\r\n        return { contacts: [...prevState.contacts, contact] };\r\n      });\r\n    }\r\n  };\r\n\r\n  removeContact = contactId => {\r\n    this.setState(prevState => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getFilterName = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  removeNotification = () => {\r\n    this.setState({ unic: '' });\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts, unic } = this.state;\r\n    const filterContacts = this.getFilterName();\r\n\r\n    return (\r\n      <Section>\r\n        <CSSTransition\r\n          in={unic ? true : undefined}\r\n          classNames={sNotify}\r\n          timeout={250}\r\n          unmountOnExit\r\n        >\r\n          <Notification onNotify={this.removeNotification} />\r\n        </CSSTransition>\r\n\r\n        <ContactEditor onAddContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n\r\n        <>\r\n          <CSSTransition\r\n            in={contacts.length > 0 ? true : undefined}\r\n            classNames={sFilter}\r\n            timeout={250}\r\n            unmountOnExit\r\n          >\r\n            <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n          </CSSTransition>\r\n\r\n          <CSSTransition in={true} timeout={0} unmountOnExit>\r\n            <ContactList\r\n              contacts={filterContacts}\r\n              onRemovecontact={this.removeContact}\r\n            />\r\n          </CSSTransition>\r\n        </>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}